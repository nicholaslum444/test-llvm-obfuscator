; ModuleID = 'a.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [8 x i8] c"a = %d\0A\00", align 1
@.str1 = private unnamed_addr constant [8 x i8] c"b = %d\0A\00", align 1
@.str2 = private unnamed_addr constant [24 x i8] c"c = a + b = 1 + 2 = %d\0A\00", align 1
@.str3 = private unnamed_addr constant [24 x i8] c"d = c - a = 3 - 1 = %d\0A\00", align 1
@.str4 = private unnamed_addr constant [24 x i8] c"e = c * d = 3 * 2 = %d\0A\00", align 1
@.str5 = private unnamed_addr constant [24 x i8] c"f = c / d = 3 / 2 = %d\0A\00", align 1
@.str6 = private unnamed_addr constant [24 x i8] c"g = e ^ d = 6 ^ 2 = %d\0A\00", align 1
@.str7 = private unnamed_addr constant [24 x i8] c"h = e & d = 6 & 2 = %d\0A\00", align 1
@.str8 = private unnamed_addr constant [24 x i8] c"i = e | d = 6 | 2 = %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %e = alloca i32, align 4
  %f = alloca i32, align 4
  %g = alloca i32, align 4
  %h = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 1, i32* %a, align 4
  store i32 2, i32* %b, align 4
  %1 = load i32* %a, align 4
  %2 = load i32* %b, align 4
  %3 = xor i32 %1, %2
  %4 = and i32 %1, %2
  %5 = add i32 %4, %4
  %6 = add nsw i32 %3, %5
  %7 = add nsw i32 %1, %2
  store i32 %6, i32* %c, align 4
  %8 = load i32* %c, align 4
  %9 = load i32* %a, align 4
  %10 = sub i32 0, %9
  %11 = xor i32 %8, %10
  %12 = and i32 %8, %10
  %13 = add i32 %12, %12
  %14 = add nsw i32 %11, %13
  %15 = sub nsw i32 %8, %9
  store i32 %14, i32* %d, align 4
  %16 = load i32* %c, align 4
  %17 = load i32* %d, align 4
  %18 = mul nsw i32 %16, %17
  store i32 %18, i32* %e, align 4
  %19 = load i32* %c, align 4
  %20 = load i32* %d, align 4
  %21 = sdiv i32 %19, %20
  store i32 %21, i32* %f, align 4
  %22 = load i32* %e, align 4
  %23 = load i32* %d, align 4
  %24 = and i32 %22, %23
  %25 = add i32 %24, %24
  %26 = add i32 %22, %23
  %27 = sub i32 %26, %25
  %28 = xor i32 %22, %23
  store i32 %27, i32* %g, align 4
  %29 = load i32* %e, align 4
  %30 = load i32* %d, align 4
  %31 = xor i32 -2028000634, -1
  %32 = or i32 %29, -2028000634
  %33 = or i32 %30, -2028000634
  %34 = or i32 %29, %31
  %35 = or i32 %30, %31
  %36 = and i32 %32, %33
  %37 = and i32 %36, %34
  %38 = and i32 %37, %35
  %39 = and i32 %29, %30
  store i32 %38, i32* %h, align 4
  %40 = load i32* %e, align 4
  %41 = load i32* %d, align 4
  %42 = xor i32 %40, -1
  %43 = xor i32 %41, -1
  %44 = xor i32 551950273, -1
  %45 = and i32 %42, 551950273
  %46 = and i32 %40, %44
  %47 = and i32 %43, 551950273
  %48 = and i32 %41, %44
  %49 = or i32 %45, %46
  %50 = or i32 %47, %48
  %51 = xor i32 %49, %50
  %52 = or i32 %42, %43
  %53 = xor i32 %52, -1
  %54 = or i32 551950273, %44
  %55 = and i32 %53, %54
  %56 = or i32 %51, %55
  %57 = or i32 %40, %41
  store i32 %56, i32* %i, align 4
  %58 = load i32* %a, align 4
  %59 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str, i32 0, i32 0), i32 %58)
  %60 = load i32* %b, align 4
  %61 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str1, i32 0, i32 0), i32 %60)
  %62 = load i32* %c, align 4
  %63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str2, i32 0, i32 0), i32 %62)
  %64 = load i32* %d, align 4
  %65 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str3, i32 0, i32 0), i32 %64)
  %66 = load i32* %e, align 4
  %67 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str4, i32 0, i32 0), i32 %66)
  %68 = load i32* %f, align 4
  %69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str5, i32 0, i32 0), i32 %68)
  %70 = load i32* %g, align 4
  %71 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str6, i32 0, i32 0), i32 %70)
  %72 = load i32* %h, align 4
  %73 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str7, i32 0, i32 0), i32 %72)
  %74 = load i32* %i, align 4
  %75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str8, i32 0, i32 0), i32 %74)
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 3.6.1 (tags/RELEASE_361/final) (based on Obfuscator-LLVM 3.6.1)"}
